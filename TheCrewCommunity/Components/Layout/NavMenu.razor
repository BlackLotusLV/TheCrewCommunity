@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<CascadingAuthenticationState>
    <UploadImageDialog ShowDialog="false" @ref="_uploadImageDialog"/>
    <nav class="navbar @NavBarClasses">
        <button class="hamburger" type="button" @onclick="ToggleMenu">
            <i class="fa fa-bars"></i>
        </button>
        <a href="/"><i class="fa fa-home"></i> Home</a>
        <div class="dropdown">
            <button class="dropdown-button" type="button"><i class="fa fa-camera"></i> Photo Mode <i class="fa fa-caret-down"></i></button>
            <div class="dropdown-content">
                <a href="/PhotoMode/Browse">Browse</a>
                <AuthorizeView>
                    <Authorized>
                        <a @onclick="_uploadImageDialog!.ToggleDialog">Upload</a>
                    </Authorized>
                </AuthorizeView>
            </div>
        </div>
        <div class="dropdown">
            <button class="dropdown-button" type="button"><i class="fa fa-right-left"></i> This or That <i class="fa fa-caret-down"></i></button>
            <div class="dropdown-content">
                <a href="/ThisOrThat/Vote">Vote</a>
                <a href="/ThisOrThat/Leaderboard">Leaderboard</a>
                <AuthorizeView Roles="Administrator">
                    <Authorized>
                        <a href="/ThisOrThat/New">New</a>
                    </Authorized>
                </AuthorizeView>
            </div>
        </div>
        <a href="/Map"><i class="fa fa-map"></i> Tomco's Map</a>
        <a href="https://discord.gg/thecrew" target="_blank"><i class="fa-brands fa-discord"></i> Discord</a>
        <a href="/Rules"><i class="fa fa-gavel"></i> Rules</a>
        <div class="navbar-right">
            <AuthorizeView>
                <Authorized>
                    <div class="dropdown">
                        <button class="dropdown-button" type="button">@_user!.Identity!.Name</button>
                        <div class="dropdown-content">
                            <a>place holder</a>
                            <a href="/api/auth/logout">Logout</a>
                        </div>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <a href="@GetLoginUrl()">Login with Discord</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </nav>
</CascadingAuthenticationState>
@code
{
    bool _isMenuOpen = false;
    string NavBarClasses => _isMenuOpen ? "responsive" : string.Empty;
    UploadImageDialog? _uploadImageDialog;

    void ToggleMenu()
    {
        _isMenuOpen = !_isMenuOpen;
    }
    ClaimsPrincipal? _user;
    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _user = authState.User;
    }
    private string GetLoginUrl()
    {
        string currentUrl = Uri.EscapeDataString(NavigationManager.Uri);
        return $"/api/Auth/login?returnUrl={currentUrl}";
    }

}
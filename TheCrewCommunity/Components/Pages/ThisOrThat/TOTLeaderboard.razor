@page "/ThisOrThat/Leaderboard"
@using TheCrewCommunity.Services
@inject GeneralUtils GeneralUtils
@inject IThisOrThatLeaderboardService LeaderboardService
@rendermode InteractiveServer

<h3>This or That Leaderboard</h3>
<p></p>
<div class="content-layout">
    <div class="table-container">
        <div class="search-container">
            <input type="text" class="search-box" placeholder="Search..." @bind-value="_searchText" @bind-value:event="oninput"/>
        </div>
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Rank</th>
                <th>Vehicle</th>
                <th>Total Wins</th>
                <th>Total Matches</th>
                <th>Win Ratio</th>
                <th>Image</th>
            </tr>
            </thead>
            <tbody>
            @if (FilteredEntries == null)
            {
                <tr>
                    <td colspan="6">Loading...</td>
                </tr>
            }
            else
            {
                <Virtualize Items="@FilteredEntries" Context="entry" ItemSize="50" OverscanCount="10">
                    <tr class="table-row" @onmouseover="() => ShowPreview(entry)">
                        <td>@entry.Rank</td>
                        <td>@entry.VehicleSuggestion.Brand - @entry.VehicleSuggestion.Model - @entry.VehicleSuggestion.Year</td>
                        <td>@entry.TotalWins</td>
                        <td>@entry.TotalMatches</td>
                        <td>@entry.WinRatio.ToString("P2")</td>
                        <td><img src="https://imagedelivery.net/Gym1gfQYlAl-qmVmCPEnkA/@entry.VehicleSuggestion.ImageId/leaderboardThumb" alt="@entry.VehicleSuggestion.Brand - @entry.VehicleSuggestion.Model - @entry.VehicleSuggestion.Year"/></td>
                    </tr>
                </Virtualize>
            }
            </tbody>
        </table>
    </div>
    <div class="preview-container">
        @if (_selectedEntry != null)
        {
            <img class="preview-image" src="https://imagedelivery.net/Gym1gfQYlAl-qmVmCPEnkA/@_selectedEntry.VehicleSuggestion.ImageId/public" alt="@_selectedEntry.VehicleSuggestion.Brand - @_selectedEntry.VehicleSuggestion.Model - @_selectedEntry.VehicleSuggestion.Year"/>
        }
        else
        {
            <p>Select a vehicle from the table</p>
        }
    </div>
</div>

@code {
    List<ThisOrThatLeaderboardService.LeaderboardEntry>? _leaderboardEntries;
    ThisOrThatLeaderboardService.LeaderboardEntry? _selectedEntry;
    string _searchText = "";
    List<ThisOrThatLeaderboardService.LeaderboardEntry>? FilteredEntries
    {
        get
        {
            if (_leaderboardEntries is null) return null;
            if (string.IsNullOrWhiteSpace(_searchText))
            {
                var sorted = _leaderboardEntries
                    .OrderByDescending(entry => entry.WinRatio)
                    .ThenByDescending(entry => entry.TotalWins)
                    .ToList();
                return sorted;
            }
            return _leaderboardEntries
                .Select(entry => new
                {
                    Entry = entry,
                    FullName = $"{entry.VehicleSuggestion.Brand} {entry.VehicleSuggestion.Model} {entry.VehicleSuggestion.Year}",
                    Similarity = GeneralUtils.CalculateStringSimilarity(
                        _searchText.AsSpan(),
                        $"{entry.VehicleSuggestion.Brand} {entry.VehicleSuggestion.Model} {entry.VehicleSuggestion.Year}".AsSpan()
                    )
                })
                .OrderByDescending(x => x.Similarity)
                .ThenByDescending(x => x.Entry.WinRatio)
                .ThenByDescending(x => x.Entry.TotalWins)
                .Select(x => x.Entry)
                .ToList();
        }
    }


    private void ShowPreview(ThisOrThatLeaderboardService.LeaderboardEntry entry)
    {
        _selectedEntry = entry;
    }

    protected override void OnInitialized()
    {
        _leaderboardEntries = LeaderboardService.GetLeaderboard();
    }
}
@page
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using TheCrewCommunity.Data.GameData
@model TheCrewCommunity.Pages.Motorfest.ProSettings.Cars

@{
    ViewData["Title"] = "Car Pro Settings";
}
<div class="ProSettingsContainer">
    <div class="sidebar">
        @{
            foreach (VehicleCategory vehicleCategory in Model.VCatList)
            {
                <a id="@vehicleCategory.Id" data-url="@Url.Page("Cars","LoadProSettings")" onclick="loadProSettings(this,'@vehicleCategory.Id')">@vehicleCategory.Name</a>
            }
        }
    </div>
    <div class="ProSettingsContents">
        <input placeholder="Search..." class="searchBox" type="text" id="searchInput"/>
        <div class="proSettingsList" id="proSettingsList"></div>
    </div>
</div>
<script>
    let debounceTimeout;
    document.getElementById('searchInput').addEventListener('input', function (event) {
        if (event.key === "Enter") {
            // If Enter key is pressed, clear the timeout and immediately call the function
            clearTimeout(debounceTimeout);
            loadProSettingsFunction(event);
        } else {
            // If any key other than Enter is pressed, debounce the function call
            clearTimeout(debounceTimeout);
            debounceTimeout = setTimeout(() => loadProSettingsFunction(event), 500);
        }
    });

    window.onload = function() {
        loadProSettings(null, null, null);
    }

    function loadProSettingsFunction(event) {
        let search = event.target.value;
        let selectedVehicleCategory = document.querySelector('.selectedVehicleCategory');
        let vCatUuid = selectedVehicleCategory ? selectedVehicleCategory.id : '';

        loadProSettings(null, vCatUuid, search);
    }
    
    let categoryLinks = document.querySelectorAll('.sidebar a');
    categoryLinks.forEach((link) => {
        link.addEventListener('click', function(event) {
            // Remove existing 'selectedVehicleCategory' class from any link
            categoryLinks.forEach((otherLink) => {
                otherLink.classList.remove('selectedVehicleCategory');
            });

            // Add 'selectedVehicleCategory' class to the clicked link
            event.currentTarget.classList.add('selectedVehicleCategory');
        });
    });
    
    function loadProSettings(element, vCatUuid, search) {
        let url = '@Url.Page("Cars", new { handler = "LoadProSettings" })';

        $.ajax({
            url: url,
            type: "GET",
            data: {
                vCatUuid: vCatUuid,
                search: search
            },
            success: function(data) {
                // clear current list
                document.getElementById('proSettingsList').innerHTML = '';

                // render new list based on fetched data
                data.forEach(function(item) {
                    let div = document.createElement('div');
                    div.classList.add('proElement');
                    
                    let carDetails = document.createElement('div');
                    carDetails.classList.add('proDetails','proCar');
                    carDetails.textContent = item['vehicle']['brandName'] + ' - ' + item['vehicle']['model'];
                    let proName = document.createElement('div');
                    proName.classList.add('proDetails', 'proName');
                    proName.textContent = item['name'];
                    let description = document.createElement('div');
                    description.classList.add('proDetails','proDescription');
                    description.textContent = item['description'];
                    let author = document.createElement('div');
                    author.classList.add('proDetails','proAuthor');
                    author.textContent = 'Author: ' + item['authorName'];
                    
                    div.appendChild(carDetails);
                    div.appendChild(proName);
                    div.appendChild(author);
                    div.appendChild(description);

                    document.getElementById('proSettingsList').appendChild(div);
                });
            },
            error: function(response) {
                alert('Error! ' + response.statusText);
            }
        });
    }


</script>
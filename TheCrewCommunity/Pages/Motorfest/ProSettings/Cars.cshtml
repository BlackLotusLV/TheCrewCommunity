@page
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using TheCrewCommunity.Data.GameData
@model TheCrewCommunity.Pages.Motorfest.ProSettings.Cars

@{
    ViewData["Title"] = "Car Pro Settings";
}
<div class="ProSettingsContainer">
    <div class="sidebar">
        @{
            foreach (VehicleCategory vehicleCategory in Model.VCatList)
            {
                <a id="@vehicleCategory.Id" data-url="@Url.Page("Cars","LoadProSettings")" onclick="loadProSettings(this,'@vehicleCategory.Id')">@vehicleCategory.Name</a>
            }
        }
    </div>
    <div class="ProSettingsContents">
        <input placeholder="Search..." class="w-full p-2 sticky top-0 bg-white z-10" type="text" id="searchInput"/>
        <div class="proSettingsList" id="proSettingsList">
            @foreach (var item in Model.ProSettingsDictionary)
            {
                <div class="proElement" id="@item.Key.Id">
                    <div class="proDetails proBrand">@item.Key.Vehicle.Brand.Name</div>
                    <div class="proDetails proModel">@item.Key.Vehicle.ModelName</div>
                    <div class="proDetails proName">@item.Key.Name</div>
                    <div class="proDetails proDescription">@item.Key.Description</div>
                </div>
            }
        </div>
    </div>
</div>
<script>
    document.getElementById('searchInput').addEventListener('input', function (event) {
        let search = event.target.value;
        let selectedVehicleCategory = document.querySelector('.selectedVehicleCategory');
        let vCatUuid = selectedVehicleCategory ? selectedVehicleCategory.id : '';
        
        loadProSettings(null, vCatUuid,search);
    });
    
    let categoryLinks = document.querySelectorAll('.sidebar a');
    categoryLinks.forEach((link) => {
        link.addEventListener('click', function(event) {
            // Remove existing 'selectedVehicleCategory' class from any link
            categoryLinks.forEach((otherLink) => {
                otherLink.classList.remove('selectedVehicleCategory');
            });

            // Add 'selectedVehicleCategory' class to the clicked link
            event.currentTarget.classList.add('selectedVehicleCategory');
        });
    });
    
    function loadProSettings(element, vCatUuid, search) {
        let url = '@Url.Page("Cars", new { handler = "LoadProSettings" })';

        $.ajax({
            url: url,
            type: "GET",
            data: {
                vCatUuid: vCatUuid,
                search: search
            },
            success: function(data) {
                // clear current list
                document.getElementById('proSettingsList').innerHTML = '';

                // render new list based on fetched data
                data.forEach(function(item) {
                    let div = document.createElement('div');
                    div.classList.add('proElement');
                    div.id = item.Id;

                    ['brandName', 'model'].forEach(function(key) {
                        let details = document.createElement('div');
                        details.classList.add('proDetails', 'pro' + key);
                        details.textContent = item.Vehicle[key];
                        div.appendChild(details);
                    });
                    ['name', 'description'].forEach(function(key) {
                        let details = document.createElement('div');
                        details.classList.add('proDetails', 'pro' + key);
                        details.textContent = item[key];
                        div.appendChild(details);
                    });

                    document.getElementById('proSettingsList').appendChild(div);
                });
            },
            error: function(response) {
                alert('Error! ' + response.statusText);
            }
        });
    }

</script>